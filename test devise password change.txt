
# How to test password reset with devise build in method :
## 1. Enter this line with your email adress
curl -X POST -H "Content-Type: application/json" -d '{"user": {"email": "test@yopmail.com"}}' http://localhost:3000/users/password
## 2. You will receive email from devise build in function, get the token from the link
here is an exemple of the email link: 
<a href="http://localhost:3000/users/password/edit?reset_password_token=yugCmZvHhCRVzrXRZ-1C">Change my password</a>

## 3. Enter this line with correct token and new password
curl -X PUT -H "Content-Type: application/json" -d '{"user": {"reset_password_token": "yugCmZvHhCRVzrXRZ-1C", "password":"admin123", "password_confirmation": "admin123"}}' http://localhost:3000/users/password


# How to test user data modifications with devise build in method :
## 1. add these line in the registrations_controller in order to get some errors message :

  def update_resource(resource, params) #this method is use to send the correct error message
    resource.update_with_password(params)
    unless resource.errors.empty?
      puts resource.errors.full_messages
    end
  end

  private

  def respond_with(resource, _opts = {})
    if resource.persisted?
      if resource.errors.empty?
        register_success && return #if the resource is persisted and there are no errors
      else
        render json: { errors: resource.errors.full_messages }, status: :unprocessable_entity #If there are errors, it sends a JSON response with a key of "errors" and a value of an array of error messages. The status code of the response is 422 Unprocessable Entity.
      end
    else
      register_failed #If the resource is not persisted, it calls register_failed
    end
  end

## 2. be connected
## 3. verify that your token is not expired
## 4. use this line with your informations.
curl -X PUT -H "Content-Type: application/json" -H "Authorization: Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI0MCIsInNjcCI6InVzZXIiLCJhdWQiOm51bGwsImlhdCI6MTcxODAyNDQyNSwiZXhwIjoxNzE4MDI4MDI1LCJqdGkiOiJlYjNiMGJiYi0zYTQwLTQwMGQtYWI2ZS1jOTcxNGU2Mjk1ODUifQ.4ccLOFKPu-edWcsODp3EpMTTcVR1N3DAmGsEnSmC064" -d '{"user":{"current_password":"azerty","email":"user123@yopmail.fr"}}' http://localhost:3000/users




memory:
dans routes.rb :

dans controller :

def recover_password
      user = User.find_by(email: params[:email])
  
      if user
        raw, enc = Devise.token_generator.generate(User, :reset_password_token)
        user.reset_password_token   = enc
        user.reset_password_sent_at = Time.now.utc
        user.save(validate: false)
        render json: { message: 'Reset password token generated', reset_password_token: raw }, status: :ok
      else
        render json: { error: 'Email not found' }, status: :not_found
      end
    end

    def reset_password
      user = User.with_reset_password_token(params[:reset_password_token])
  
      if user && user.reset_password_period_valid?
        user.password = params[:password]
        user.password_confirmation = params[:password_confirmation]
        if user.save
          render json: { message: 'Password reset successfully' }, status: :ok
        else
          render json: { error: user.errors.full_messages }, status: :unprocessable_entity
        end
      else
        render json: { error: 'Token invalid or expired' }, status: :unprocessable_entity
      end
    end